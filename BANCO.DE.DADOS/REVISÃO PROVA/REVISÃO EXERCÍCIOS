SLIDE 7 - VIEW E FUNÇÕES DE GRUPO/AGREGAÇÃO

- CRIANDO UMA VIEW:

    CREATE VIEW funcionarios as 
( 
select 
 employee_id as id_func,
 first_name || ' ' || last_name as nome_completo,
 hire_date as dt_admissao,
 job_id as id_cargo,
 salary as salario,
 commission_pct as comissao,
 manager_id as id_gerente,
 department_id as id_departamento 
from hr.employees
)

- FUNÇÕES DE GRUPO/AGREGAÇÃO:

    - AVG: calcula a MÉDIA dos valores.
    Ex.: SELECT AVG(salario) FROM empregados;

    - FUNÇÃO NVL: força as funções de grupo a incluírem valores nulos.
    Ex: SELECT AVG(comission_pct), avg(NVL(comission_pct,0)) FROM hr.exployees
    
    - COUNT: conta a QUANTIDADE de registros.
    Ex.: SELECT COUNT(*) FROM vendas;
    
    - MAX: retorna o MAIOR valor.
    Ex.: SELECT MAX(preco) FROM produtos;
    
    - MIN: retorna o MENOR valor.
    Ex.: SELECT MIN(idade) FROM clientes;
    
    - STDDEV: calcula o DESVIO padrão, mostrando a dispersão dos dados.
    Ex.: SELECT STDDEV(valor) FROM transacoes;
    
    - SUM: SOMA os valores de uma coluna.
    Ex.: SELECT SUM(lucro) FROM relatorio;
    
    - VARIANCE: calcula a VARIÂNCIA, mostrando o quão espalhados estão os dados.
    Ex.: SELECT VARIANCE(pontos) FROM desempenho;

OBS: NÃO PODE SER USADA A CONDIÇÃO WHERE PARA FILTRAR CONDIÇÕES REFRENTE A FUNÇÕES DE GRUPO.
________________________________________________________________________________________________
SLIDE 8 - SUBCONSULTA e CTE

- SUBCONSULTA DE ÚNICA LINHA:
Quais são os dados do funcionário que tem maior comissão?

SELECT * FROM hr.employees 
WHERE comission_pct = 
(
SELECT MAX(comission_pct)
FROM hr.employees
)

- SUBCONSULTA DE VÁRIAS LINHAS:
Quais são os dados do funcionário que tem o mesmo salário que o cargo com final CLERK?

SELECT * FROM hr.employees
WHERE salary in 
(
SELECT salary FROM hr.employees
WHERE job_id like '%CLERK'
)

- SUBCONSULTAS DE VÁRIAS COLUNAS:
- Quais são os dados do funcionário que tem o mesmo salário e comissão da equipe do gestor 
100, mas que pertence a outra gestão?

SELECT * FROM hr.employees 
WHERE (salary,comission_pct) in
(
SELECT salary, comission_pct FROM hr.employees
WHERE manager_id = 100
)
and manager_id <> 100

- CTE (SEMPRE DEVE TER O 'WITH', porque ele é o comando que inicia e define o escopo da CTE)
- Qual a diferença de salário (com comissão) do primeiro e do último contratado? (subconsulta)

WITH min_hire_salary AS (
    SELECT salary 
    FROM hr.employees 
    WHERE hire_date = (SELECT MIN(hire_date) FROM hr.employees)
),
max_hire_salary AS (
    SELECT salary 
    FROM hr.employees 
    WHERE hire_date = (SELECT MAX(hire_date) FROM hr.employees)
)
SELECT 
    (SELECT salary FROM min_hire_salary) AS sal_prim, 
    (SELECT salary FROM max_hire_salary) AS sal_ult;

________________________________________________________________________________________________
SLIDE 9 - JOIN

- INNER JOIN
- Quais funcionários estão associados a um departamento?

SELECT a.employee_id, a.first_name, b.department_name 
FROM hr.employees a
INNER JOIN hr.departments b
ON a.department_id = b.department_id;

- LEFT JOIN
- Quais funcionários não possuem departamento associado?

SELECT a.employee_id, a.first_name, b.department_name
FROM hr.employees a
LEFT JOIN hr.departments b
ON a.department_id = b.department_id;

- RIGHT JOIN
- Existem departamentos que não possuem nenhum funcionário associado?

SELECT b.department_id, b.department_name, a.first_name
FROM hr.employees a
RIGHT JOIN hr.departments b
ON a.department_id = b.department_id;

- OUTER JOIN
- Existem funcionários sem departamento ou departamentos sem funcionários?

SELECT a.employee_id, a.first_name, b.department_name
FROM hr.employees a
FULL OUTER JOIN hr.departments b
ON a.department_id = b.department_id;

- LEFT EXCLUDING JOIN
- Quais funcionários não estão associados a nenhum departamento?

SELECT a.employee_id, a.first_name
FROM hr.employees a
LEFT JOIN hr.departments b
ON a.department_id = b.department_id
WHERE b.department_id IS NULL;

- RIGHT EXCLUDING JOIN
- Quais departamentos não possuem nenhum funcionário associado?

SELECT b.department_id, b.department_name
FROM hr.employees a
RIGHT JOIN hr.departments b
ON a.department_id = b.department_id
WHERE a.employee_id IS NULL;

________________________________________________________________________________________________
SLIDE 10 - ESTRUTURAS CONDICIONAIS E TIPOS DE DADOS

- CASE WHEN
- Como identificar os funcionários com salários acima de 5000 e rotulá-los como "Alta Renda", 
enquanto os demais são rotulados como "Média Renda"?

SELECT employee_id, first_name, salary, 
       CASE 
           WHEN salary > 5000 THEN 'Alta Renda'
           ELSE 'Média Renda'
       END AS faixa_salarial
FROM hr.employees;

- CASE CAST 
- Como exibir os salários dos funcionários como texto em vez de números?

SELECT employee_id, first_name, 
       CAST(salary AS VARCHAR(10)) AS salario_texto
FROM hr.employees;

________________________________________________________________________________________________
