SLIDE 7 - VIEW E FUNÇÕES DE GRUPO

- VIEW: pode ser definida como uma tabela virtual composto por linhas e colunas de dados vindo de tabelas relacionadas em uma query, 
geradas dinamicamente em que é feita uma referência a ela.
  - FUNÇÃO DA VIEW: FILTRAR tabelas, servindo para agrupá-las, protegendo certas colunas e simplificando o código de programação.
  - VANTAGENS DA VIEW: 
    - REUSO: podem ser utilizadas por vários usuários simultaneamente, como uma tabela.
    - SEGURANÇA: permite OCULTAR colunas, já que sua criação é a partir de outra tabela.
    - SIMPLIFICAÇÃO DO CÓDIGO: a partir de uma consulta complexa, é possível CRIAR um view, deixando o código mais simples.

- QUERY: ela determina se uma view pode vir uma ou mais tabelas ou até mesmo de outras views.

- FUNÇÕES DE GRUPO/AGREGAÇÃO: PROCESSAM várias linhas e retornam um único valor resumido. 
São úteis para análises em grandes conjuntos de dados. 

    - AVG: calcula a MÉDIA dos valores.
    Ex.: SELECT AVG(salario) FROM empregados;
      - FUNÇÃO NVL: força as funções de grupo a incluírem valores nulos.
      Ex: SELECT AVG(comission_pct), avg(NVL(comission_pct,0)) FROM hr.exployees
    
    - COUNT: conta a QUANTIDADE de registros.
    Ex.: SELECT COUNT(*) FROM vendas;
    
    - MAX: retorna o MAIOR valor.
    Ex.: SELECT MAX(preco) FROM produtos;
    
    - MIN: retorna o MENOR valor.
    Ex.: SELECT MIN(idade) FROM clientes;
    
    - STDDEV: calcula o DESVIO padrão, mostrando a dispersão dos dados.
    Ex.: SELECT STDDEV(valor) FROM transacoes;
    
    - SUM: SOMA os valores de uma coluna.
    Ex.: SELECT SUM(lucro) FROM relatorio;
    
    - VARIANCE: calcula a VARIÂNCIA, mostrando o quão espalhados estão os dados.
    Ex.: SELECT VARIANCE(pontos) FROM desempenho;

- A coluna não calculada pela função de grupo é OPCIONAL, ao informá-la é obrigatório o uso do GROUP BY
- A ordenação padrão é a CRESCENTE, para sobrepor essa ordenação, é utilizado o DESC na clausula ORDER BY

- WHERE: 
  - A condição WHERE é OPCIONAL, esse filtro não pode ser utilizado em apelidos de colunas, serve para FILTRAR os dados antes de agrupá-los
  - A condição WHERE NÃO pode ser usada para filtrar condições referente a funções de grupos, para isso é utilizada a cláusula HAVING

- HAVING: é usada para filtrar resultados de grupos criados pelo GROUP BY, aplicando condições nas funções de agregação.
_______________________________________________________________________________________________________________________________________________
SLIDE 8 - SUBCONSULTAS E CTE PADRÃO E RECURSIVO

- SUBCONSULTA (CONSULTA INTERNA): é executada antes da consulta principal, dessa forma o resultado é usado pela consulta principal.
  - São úteis para selecionar linhas de uma tabela com uma condição que dependa dos dados na própria tabela.
  - PODEM SER USADAS nas cláusulas WHERE, HAVING, FROM
  - A SUBCONSULTA DEVE ESTAR ENTRE PARÊNTESES.
  - NÃO SE DEVE USAR ORDER BY EM SUBCONSULTAS.

- OPERADOR DE ÚNICA LINHA COM SUBCONSULTA DE ÚNICA LINHA
- OPERADOR DE VÁRIAS LINHAS COM SUBCONSULTA DE VÁRIAS LINHAS

- CTE: usada para SIMPLIFICAR a escrita de consultas complexas, ajuda a dividir a lógica em 
partes menores tornando-as mais fáceis para o entendimento.
  - Sâo definidos na frente da consulta, enquanto as subconsultas são definidas em linha.
  - Os CTEs SEMPRE DEVEM SER NOMEADOS.

- WITH: é usada para DEFINIR CONSULTAS RECURSIVAS(CTE). Essas consultas AJUDAM a consultar estruturas hierárquicas.
_______________________________________________________________________________________________________________________________________________
SLIDE 9 - JOIN

- JOIN: combina dados de duas ou mais tabelas com base em uma relação comum, geralmente uma chave. 
Ele permite trabalhar com dados relacionados de diferentes tabelas.
  - ON: Ela define a relação entre as tabelas que estão sendo unidas.
    - INNER JOIN: apenas correspondências.
    - LEFT JOIN: tudo da esquerda, mesmo sem correspondência.
    - RIGHT JOIN: tudo da direita, mesmo sem correspondência.
    - FULL OUTER JOIN: tudo de ambas as tabelas, correspondendo ou não.
    - LEFT/RIGHT EXCLUDING JOIN: apenas linhas exclusivas de uma tabela.
_______________________________________________________________________________________________________________________________________________
SLIDE 10 - ESTRUTURAS CONDICIONAIS

- CASE WHEN: pode ser usado para uma ou mais condições
- CAST: é uma função complexa que transforma um ou mais valores de um tipo 
de dados para outro.
_______________________________________________________________________________________________________________________________________________
